{"version":3,"file":"ngx-spinner.js","sources":["ngx-spinner/lib/ngx-spinner.enum.ts","ngx-spinner/lib/ngx-spinner.service.ts","ngx-spinner/lib/ngx-spinner.component.ts","ngx-spinner/lib/ngx-spinner.module.ts"],"names":[],"mappings":"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AA,AAhCA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAyBA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AA4CA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AAhwoBA,AAAA,AAMA,AAAA,AAMA,AAAA,AAMA,AAAA,AAMA,AAAA,AAMA,AAAA,AC1DA,AAWA,AAAA,AAPA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA","sourcesContent":["export const LOADERS = {\n  'ball-8bits': 16,\n  'ball-atom': 4,\n  'ball-beat': 3,\n  'ball-circus': 5,\n  'ball-climbing-dot': 4,\n  'ball-clip-rotate': 1,\n  'ball-clip-rotate-multiple': 2,\n  'ball-clip-rotate-pulse': 2,\n  'ball-elastic-dots': 5,\n  'ball-fall': 3,\n  'ball-fussion': 4,\n  'ball-grid-beat': 9,\n  'ball-grid-pulse': 9,\n  'ball-newton-cradle': 4,\n  'ball-pulse': 3,\n  'ball-pulse-rise': 5,\n  'ball-pulse-sync': 3,\n  'ball-rotate': 1,\n  'ball-running-dots': 5,\n  'ball-scale': 1,\n  'ball-scale-multiple': 3,\n  'ball-scale-pulse': 2,\n  'ball-scale-ripple': 1,\n  'ball-scale-ripple-multiple': 3,\n  'ball-spin': 8,\n  'ball-spin-clockwise': 8,\n  'ball-spin-clockwise-fade': 8,\n  'ball-spin-clockwise-fade-rotating': 8,\n  'ball-spin-fade': 8,\n  'ball-spin-fade-rotating': 8,\n  'ball-spin-rotate': 2,\n  'ball-square-clockwise-spin': 8,\n  'ball-square-spin': 8,\n  'ball-triangle-path': 3,\n  'ball-zig-zag': 2,\n  'ball-zig-zag-deflect': 2,\n  'cog': 1,\n  'cube-transition': 2,\n  'fire': 3,\n  'line-scale': 5,\n  'line-scale-party': 5,\n  'line-scale-pulse-out': 5,\n  'line-scale-pulse-out-rapid': 5,\n  'line-spin-clockwise-fade': 8,\n  'line-spin-clockwise-fade-rotating': 8,\n  'line-spin-fade': 8,\n  'line-spin-fade-rotating': 8,\n  'pacman': 6,\n  'square-jelly-box': 2,\n  'square-loader': 1,\n  'square-spin': 1,\n  'timer': 1,\n  'triangle-skew-spin': 1\n};\n\nexport const DEFAULTS = {\n  BD_COLOR: 'rgba(51,51,51,0.8)',\n  SPINNER_COLOR: '#fff',\n  SPINNER_TYPE: 'ball-scale-multiple',\n};\n\nexport const PRIMARY_SPINNER = 'primary';\n\nexport type Size = 'default' | 'small' | 'medium' | 'large';\n\nexport interface Spinner {\n  bdColor?: string;\n  size?: Size;\n  color?: string;\n  type?: string;\n  fullScreen?: boolean;\n}\n\nexport class NgxSpinner {\n  name: string;\n  bdColor: string;\n  size: Size;\n  color: string;\n  type: string;\n  class: string;\n  divCount: number;\n  divArray: Array<number>;\n  fullScreen: boolean;\n  show: boolean;\n\n  constructor(init?: Partial<NgxSpinner>) {\n    Object.assign(this, init);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { NgxSpinner, PRIMARY_SPINNER, Spinner } from './ngx-spinner.enum';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxSpinnerService {\n  /**\n   * Spinner observable\n   *\n   * @memberof NgxSpinnerService\n   */\n  private spinnerObservable = new ReplaySubject<NgxSpinner>(1);\n  /**\n   * Creates an instance of NgxSpinnerService.\n   * @memberof NgxSpinnerService\n   */\n  constructor() { }\n  /**\n  * Get subscription of desired spinner\n  * @memberof NgxSpinnerService\n  **/\n  getSpinner(name: string): Observable<NgxSpinner> {\n    return this.spinnerObservable.asObservable().pipe(filter((x: NgxSpinner) => x && x.name === name));\n  }\n  /**\n   * To show spinner\n   *\n   * @memberof NgxSpinnerService\n   */\n  show(name: string = PRIMARY_SPINNER, spinner?: Spinner) {\n    const showPromise = new Promise((resolve, reject) => {\n      if (spinner && Object.keys(spinner).length) {\n        spinner['name'] = name;\n        this.spinnerObservable.next(new NgxSpinner({ ...spinner, show: true }));\n        resolve(true);\n      } else {\n        this.spinnerObservable.next(new NgxSpinner({ name, show: true }));\n        resolve(true);\n      }\n    });\n    return showPromise;\n  }\n  /**\n  * To hide spinner\n  *\n  * @memberof NgxSpinnerService\n  */\n  hide(name: string = PRIMARY_SPINNER) {\n    const hidePromise = new Promise((resolve, reject) => {\n      this.spinnerObservable.next(new NgxSpinner({ name, show: false }));\n      resolve(true);\n    });\n    return hidePromise;\n  }\n}\n","import {\n  Component,\n  OnDestroy,\n  Input,\n  OnInit,\n  OnChanges,\n  SimpleChange,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { NgxSpinnerService } from './ngx-spinner.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { LOADERS, DEFAULTS, Size, NgxSpinner, PRIMARY_SPINNER } from './ngx-spinner.enum';\n\n@Component({\n  selector: 'ngx-spinner',\n  templateUrl: 'ngx-spinner.component.html',\n  styleUrls: ['ngx-spinner.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxSpinnerComponent implements OnDestroy, OnInit, OnChanges {\n\n  /**\n   * To set backdrop color\n   * Only supports RGBA color format\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() bdColor: string;\n  /**\n   * To set spinner size\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() size: Size;\n  /**\n   * To set spinner color(DEFAULTS.SPINNER_COLOR)\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() color: string;\n  /**\n   * To set type of spinner\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() type: string;\n  /**\n   * To toggle fullscreen mode\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() fullScreen: boolean;\n  /**\n   * Spinner name\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() name: string;\n  /**\n   * Spinner Object\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  spinner: NgxSpinner = new NgxSpinner();\n  /**\n   * Array for spinner's divs\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  divArray: Array<number>;\n  /**\n   * Counter for div\n   *\n   * @memberof NgxSpinnerComponent\n   *\n   */\n  divCount: number;\n  /**\n   * Show spinner\n   *\n   * @memberof NgxSpinnerComponent\n  **/\n  show: boolean;\n  /**\n   * Unsubscribe from spinner's observable\n   *\n   * @memberof NgxSpinnerComponent\n  **/\n  ngUnsubscribe: Subject<void> = new Subject();\n\n  /**\n   * Creates an instance of NgxSpinnerComponent.\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  constructor(private spinnerService: NgxSpinnerService, private changeDetector: ChangeDetectorRef) {\n    this.bdColor = DEFAULTS.BD_COLOR;\n    this.size = 'large';\n    this.color = DEFAULTS.SPINNER_COLOR;\n    this.type = DEFAULTS.SPINNER_TYPE;\n    this.fullScreen = true;\n    this.name = PRIMARY_SPINNER;\n\n    this.divArray = [];\n    this.divCount = 0;\n    this.show = false;\n  }\n  /**\n   * Initialization method\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  ngOnInit() {\n    this.setDefaultOptions();\n    this.spinnerService.getSpinner(this.name)\n      .pipe(\n        takeUntil(this.ngUnsubscribe)\n      )\n      .subscribe((spinner: NgxSpinner) => {\n        this.setDefaultOptions();\n        Object.assign(this.spinner, spinner);\n        if (spinner.show) {\n          this.onInputChange();\n        }\n        this.changeDetector.markForCheck();\n      });\n  }\n  /**\n   * To set default ngx-spinner options\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  setDefaultOptions = () => {\n    this.spinner = new NgxSpinner({\n      name: this.name,\n      bdColor: this.bdColor,\n      size: this.size,\n      color: this.color,\n      type: this.type,\n      fullScreen: this.fullScreen,\n      divArray: this.divArray,\n      divCount: this.divCount,\n      show: this.show\n    });\n  }\n  /**\n   * On changes event for input variables\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\n    for (const propName in changes) {\n      if (propName) {\n        const changedProp = changes[propName];\n        if (changedProp.isFirstChange()) {\n          return;\n        } else if (typeof changedProp.currentValue !== 'undefined' && changedProp.currentValue !== changedProp.previousValue) {\n          if (changedProp.currentValue !== '') {\n            this.spinner[propName] = changedProp.currentValue;\n          }\n        }\n      }\n    }\n  }\n  /**\n   * To get class for spinner\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  getClass(type: string, size: Size): string {\n    this.spinner.divCount = LOADERS[type];\n    this.spinner.divArray = Array(this.spinner.divCount).fill(0).map((x, i) => i);\n    let sizeClass = '';\n    switch (size.toLowerCase()) {\n      case 'small':\n        sizeClass = 'la-sm';\n        break;\n      case 'medium':\n        sizeClass = 'la-2x';\n        break;\n      case 'large':\n        sizeClass = 'la-3x';\n        break;\n      default:\n        break;\n    }\n    return 'la-' + type + ' ' + sizeClass;\n  }\n  /**\n   * Check if input variables have changed\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  onInputChange() {\n    this.spinner.class = this.getClass(this.spinner.type, this.spinner.size);\n  }\n  /**\n   * Component destroy event\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  ngOnDestroy() {\n    this.ngUnsubscribe.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxSpinnerComponent } from './ngx-spinner.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [NgxSpinnerComponent],\n  exports: [NgxSpinnerComponent]\n})\nexport class NgxSpinnerModule { }\n"]}